{
  "id": "490c7df8-1f18-4a39-a1d5-612740f6f933",
  "prevId": "b01f95cc-301a-466e-a6bf-fb2bc73ecbc9",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.api_keys": {
      "name": "api_keys",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "key_prefix": {
          "name": "key_prefix",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "key_hash": {
          "name": "key_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_name": {
          "name": "client_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "allowed_origins": {
          "name": "allowed_origins",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "api_keys_user_id_idx": {
          "name": "api_keys_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "api_keys_prefix_idx": {
          "name": "api_keys_prefix_idx",
          "columns": [
            {
              "expression": "key_prefix",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"api_keys\".\"is_active\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "api_keys_expires_idx": {
          "name": "api_keys_expires_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"api_keys\".\"is_active\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_keys_user_id_users_id_fk": {
          "name": "api_keys_user_id_users_id_fk",
          "tableFrom": "api_keys",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_keys_key_prefix_unique": {
          "name": "api_keys_key_prefix_unique",
          "nullsNotDistinct": false,
          "columns": [
            "key_prefix"
          ]
        },
        "api_keys_key_hash_unique": {
          "name": "api_keys_key_hash_unique",
          "nullsNotDistinct": false,
          "columns": [
            "key_hash"
          ]
        }
      },
      "policies": {
        "api_keys_own": {
          "name": "api_keys_own",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid",
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "api_keys_admin": {
          "name": "api_keys_admin",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.application_votes": {
      "name": "application_votes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "application_id": {
          "name": "application_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "vote_type": {
          "name": "vote_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "votes_application_idx": {
          "name": "votes_application_idx",
          "columns": [
            {
              "expression": "application_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "application_votes_application_id_applications_id_fk": {
          "name": "application_votes_application_id_applications_id_fk",
          "tableFrom": "application_votes",
          "tableTo": "applications",
          "columnsFrom": [
            "application_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "application_votes_application_id_user_id_pk": {
          "name": "application_votes_application_id_user_id_pk",
          "columns": [
            "application_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "application_votes_member": {
          "name": "application_votes_member",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "member"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "application_votes_admin": {
          "name": "application_votes_admin",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.applications": {
      "name": "applications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "application_number": {
          "name": "application_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "message_id": {
          "name": "message_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "wallet_address": {
          "name": "wallet_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ens_name": {
          "name": "ens_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "github": {
          "name": "github",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "farcaster": {
          "name": "farcaster",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lens": {
          "name": "lens",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "twitter": {
          "name": "twitter",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "excitement": {
          "name": "excitement",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "motivation": {
          "name": "motivation",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "signature": {
          "name": "signature",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "decided_at": {
          "name": "decided_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "applications_status_idx": {
          "name": "applications_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "applications_wallet_idx": {
          "name": "applications_wallet_idx",
          "columns": [
            {
              "expression": "wallet_address",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "applications_application_number_unique": {
          "name": "applications_application_number_unique",
          "nullsNotDistinct": false,
          "columns": [
            "application_number"
          ]
        },
        "applications_message_id_unique": {
          "name": "applications_message_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "message_id"
          ]
        }
      },
      "policies": {
        "applications_select_member": {
          "name": "applications_select_member",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "member"
          ],
          "using": "true"
        },
        "applications_admin_all": {
          "name": "applications_admin_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.practice_sessions": {
      "name": "practice_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "duration": {
          "name": "duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "date": {
          "name": "date",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "practice_sessions_user_date_idx": {
          "name": "practice_sessions_user_date_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "practice_sessions_active_idx": {
          "name": "practice_sessions_active_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"practice_sessions\".\"end_time\" IS NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "practice_sessions_user_id_users_id_fk": {
          "name": "practice_sessions_user_id_users_id_fk",
          "tableFrom": "practice_sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "practice_sessions_own": {
          "name": "practice_sessions_own",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid",
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "practice_sessions_admin": {
          "name": "practice_sessions_admin",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.projects": {
      "name": "projects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "github_url": {
          "name": "github_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "deployment_url": {
          "name": "deployment_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "ARRAY[]::text[]"
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "projects_user_id_idx": {
          "name": "projects_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "projects_public_idx": {
          "name": "projects_public_idx",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"projects\".\"is_public\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "projects_tags_idx": {
          "name": "projects_tags_idx",
          "columns": [
            {
              "expression": "tags",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {
        "projects_user_id_users_id_fk": {
          "name": "projects_user_id_users_id_fk",
          "tableFrom": "projects",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "projects_select_public": {
          "name": "projects_select_public",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "is_public = true"
        },
        "projects_select_authenticated": {
          "name": "projects_select_authenticated",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "is_public = true OR user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "projects_select_member": {
          "name": "projects_select_member",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "member"
          ],
          "using": "true"
        },
        "projects_select_admin": {
          "name": "projects_select_admin",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "admin"
          ],
          "using": "true"
        },
        "projects_insert_authenticated": {
          "name": "projects_insert_authenticated",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "projects_update_own": {
          "name": "projects_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid",
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "projects_update_admin": {
          "name": "projects_update_admin",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "projects_delete_own": {
          "name": "projects_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "projects_delete_admin": {
          "name": "projects_delete_admin",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "admin"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "family_id": {
          "name": "family_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "client_id": {
          "name": "client_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "revoked_at": {
          "name": "revoked_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "refresh_tokens_user_id_idx": {
          "name": "refresh_tokens_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_hash_idx": {
          "name": "refresh_tokens_hash_idx",
          "columns": [
            {
              "expression": "token_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_family_idx": {
          "name": "refresh_tokens_family_idx",
          "columns": [
            {
              "expression": "family_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_expires_idx": {
          "name": "refresh_tokens_expires_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refresh_tokens_user_id_users_id_fk": {
          "name": "refresh_tokens_user_id_users_id_fk",
          "tableFrom": "refresh_tokens",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "refresh_tokens_token_hash_unique": {
          "name": "refresh_tokens_token_hash_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token_hash"
          ]
        }
      },
      "policies": {
        "refresh_tokens_own": {
          "name": "refresh_tokens_own",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid",
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "refresh_tokens_admin": {
          "name": "refresh_tokens_admin",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.user_identities": {
      "name": "user_identities",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "platform": {
          "name": "platform",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "identity": {
          "name": "identity",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_primary": {
          "name": "is_primary",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "user_identities_user_id_idx": {
          "name": "user_identities_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_identities_primary_idx": {
          "name": "user_identities_primary_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_primary",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"user_identities\".\"is_primary\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_identities_user_id_users_id_fk": {
          "name": "user_identities_user_id_users_id_fk",
          "tableFrom": "user_identities",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_identities_platform_identity_pk": {
          "name": "user_identities_platform_identity_pk",
          "columns": [
            "platform",
            "identity"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "user_identities_select_own": {
          "name": "user_identities_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "user_identities_select_admin": {
          "name": "user_identities_select_admin",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "admin"
          ],
          "using": "true"
        },
        "user_identities_insert_own": {
          "name": "user_identities_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "user_identities_insert_admin": {
          "name": "user_identities_insert_admin",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "admin"
          ],
          "withCheck": "true"
        },
        "user_identities_update_own": {
          "name": "user_identities_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid",
          "withCheck": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "user_identities_update_admin": {
          "name": "user_identities_update_admin",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "user_identities_delete_own": {
          "name": "user_identities_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "user_id = current_setting('app.current_user_id', true)::uuid"
        },
        "user_identities_delete_admin": {
          "name": "user_identities_delete_admin",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "admin"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'authenticated'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "users_role_idx": {
          "name": "users_role_idx",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "users_select_authenticated": {
          "name": "users_select_authenticated",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "id = current_setting('app.current_user_id', true)::uuid"
        },
        "users_select_members": {
          "name": "users_select_members",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "member"
          ],
          "using": "true"
        },
        "users_select_admin": {
          "name": "users_select_admin",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "admin"
          ],
          "using": "true"
        },
        "users_update_self": {
          "name": "users_update_self",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "id = current_setting('app.current_user_id', true)::uuid",
          "withCheck": "id = current_setting('app.current_user_id', true)::uuid"
        },
        "users_update_admin": {
          "name": "users_update_admin",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "users_delete_admin": {
          "name": "users_delete_admin",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "admin"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.vanishing_channels": {
      "name": "vanishing_channels",
      "schema": "",
      "columns": {
        "channel_id": {
          "name": "channel_id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "guild_id": {
          "name": "guild_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "vanish_after": {
          "name": "vanish_after",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "messages_deleted": {
          "name": "messages_deleted",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "last_deletion": {
          "name": "last_deletion",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "vanishing_channels_guild_idx": {
          "name": "vanishing_channels_guild_idx",
          "columns": [
            {
              "expression": "guild_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "vanishing_channels_admin_all": {
          "name": "vanishing_channels_admin_all",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "admin"
          ],
          "using": "true",
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {
    "admin": {
      "name": "admin",
      "createDb": false,
      "createRole": false,
      "inherit": true
    },
    "authenticated": {
      "name": "authenticated",
      "createDb": false,
      "createRole": false,
      "inherit": true
    },
    "member": {
      "name": "member",
      "createDb": false,
      "createRole": false,
      "inherit": true
    }
  },
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}